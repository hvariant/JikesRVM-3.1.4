/*------ MACHINE GENERATED by org.jikesrvm.tools.header_gen.GenerateInterfaceDeclarations.java: DO NOT EDIT------*/

#define PORTABLE_NATIVE_SYNC 1

#ifdef NEED_BOOT_RECORD_DECLARATIONS
struct BootRecord {
  uint32_t    headerPadding0;

  uint32_t    headerPadding1;

   Address * heapRanges;
   Address JNIFunctions;
   Address bootImageDataStart;
   Address bootImageDataEnd;
   Address bootImageCodeStart;
   Address bootImageCodeEnd;
   Address bootImageRMapStart;
   Address bootImageRMapEnd;
   Address initialHeapSize;
   Address maximumHeapSize;
   Address bytesInPage;
   uint32_t verboseBoot;
   uint32_t verboseSignalHandling;
   Address spRegister;
   Address ipRegister;
   Address tocRegister;
   uint32_t bootCompleted;
   Address sysJavaVM;
   uint32_t hardwareTrapMethodId;
   Address deliverHardwareExceptionOffset;
   Address dumpStackAndDieOffset;
   Address bootThreadOffset;
   Address debugRequestedOffset;
   uint32_t externalSignalFlag;
   Address sysConsoleWriteCharIP;
   Address sysConsoleWriteIntegerIP;
   Address sysConsoleWriteLongIP;
   Address sysConsoleWriteDoubleIP;
   Address sysExitIP;
   Address sysArgIP;
   Address sysGetenvIP;
   Address sysCopyIP;
   Address sysMemmoveIP;
   Address sysMallocIP;
   Address sysCallocIP;
   Address sysFreeIP;
   Address sysZeroNTIP;
   Address sysZeroIP;
   Address sysZeroPagesIP;
   Address sysSyncCacheIP;
   Address sysReadByteIP;
   Address sysWriteByteIP;
   Address sysReadBytesIP;
   Address sysWriteBytesIP;
   Address sysMMapIP;
   Address sysMMapErrnoIP;
   Address sysMProtectIP;
   Address sysNumProcessorsIP;
   Address sysThreadBindSupportedIP;
   Address sysThreadBindIP;
   Address sysThreadCreateIP;
   Address sysThreadYieldIP;
   Address sysGetThreadIdIP;
   Address sysStashVMThreadIP;
   Address sysThreadTerminateIP;
   Address sysGetThreadPriorityHandleIP;
   Address sysGetThreadPriorityIP;
   Address sysSetThreadPriorityIP;
   Address sysMonitorCreateIP;
   Address sysMonitorDestroyIP;
   Address sysMonitorEnterIP;
   Address sysMonitorExitIP;
   Address sysMonitorTimedWaitAbsoluteIP;
   Address sysMonitorWaitIP;
   Address sysMonitorBroadcastIP;
   Address sysLongDivideIP;
   Address sysLongRemainderIP;
   Address sysLongToFloatIP;
   Address sysLongToDoubleIP;
   Address sysFloatToIntIP;
   Address sysDoubleToIntIP;
   Address sysFloatToLongIP;
   Address sysDoubleToLongIP;
   Address sysDoubleRemainderIP;
   Address sysPrimitiveParseFloatIP;
   Address sysPrimitiveParseIntIP;
   Address sysParseMemorySizeIP;
   Address sysCurrentTimeMillisIP;
   Address sysNanoTimeIP;
   Address sysNanoSleepIP;
   Address sysDlopenIP;
   Address sysDlsymIP;
   Address sysVaCopyIP;
   Address sysVaEndIP;
   Address sysVaArgJbooleanIP;
   Address sysVaArgJbyteIP;
   Address sysVaArgJcharIP;
   Address sysVaArgJshortIP;
   Address sysVaArgJintIP;
   Address sysVaArgJlongIP;
   Address sysVaArgJfloatIP;
   Address sysVaArgJdoubleIP;
   Address sysVaArgJobjectIP;
   Address sysVMMathSinIP;
   Address sysVMMathCosIP;
   Address sysVMMathTanIP;
   Address sysVMMathAsinIP;
   Address sysVMMathAcosIP;
   Address sysVMMathAtanIP;
   Address sysVMMathAtan2IP;
   Address sysVMMathCoshIP;
   Address sysVMMathSinhIP;
   Address sysVMMathTanhIP;
   Address sysVMMathExpIP;
   Address sysVMMathLogIP;
   Address sysVMMathSqrtIP;
   Address sysVMMathPowIP;
   Address sysVMMathIEEEremainderIP;
   Address sysVMMathCeilIP;
   Address sysVMMathFloorIP;
   Address sysVMMathRintIP;
   Address sysVMMathCbrtIP;
   Address sysVMMathExpm1IP;
   Address sysVMMathHypotIP;
   Address sysVMMathLog10IP;
   Address sysVMMathLog1pIP;
   Address sysEnableAlignmentCheckingIP;
   Address sysDisableAlignmentCheckingIP;
   Address sysReportAlignmentCheckingIP;
   Address gcspyDriverAddStreamIP;
   Address gcspyDriverEndOutputIP;
   Address gcspyDriverInitIP;
   Address gcspyDriverInitOutputIP;
   Address gcspyDriverResizeIP;
   Address gcspyDriverSetTileNameRangeIP;
   Address gcspyDriverSetTileNameIP;
   Address gcspyDriverSpaceInfoIP;
   Address gcspyDriverStartCommIP;
   Address gcspyDriverStreamIP;
   Address gcspyDriverStreamByteValueIP;
   Address gcspyDriverStreamShortValueIP;
   Address gcspyDriverStreamIntValueIP;
   Address gcspyDriverSummaryIP;
   Address gcspyDriverSummaryValueIP;
   Address gcspyIntWriteControlIP;
   Address gcspyMainServerAddDriverIP;
   Address gcspyMainServerAddEventIP;
   Address gcspyMainServerInitIP;
   Address gcspyMainServerIsConnectedIP;
   Address gcspyMainServerOuterLoopIP;
   Address gcspyMainServerSafepointIP;
   Address gcspyMainServerSetGeneralInfoIP;
   Address gcspyMainServerStartCompensationTimerIP;
   Address gcspyMainServerStopCompensationTimerIP;
   Address gcspyStartserverIP;
   Address gcspyStreamInitIP;
   Address gcspyFormatSizeIP;
   Address gcspySprintfIP;
   Address sysPerfEventInitIP;
   Address sysPerfEventCreateIP;
   Address sysPerfEventEnableIP;
   Address sysPerfEventDisableIP;
   Address sysPerfEventReadIP;
};
#endif /* NEED_BOOT_RECORD_DECLARATIONS */

#ifdef NEED_BOOT_RECORD_INITIALIZATION
static void setLinkage(struct BootRecord* br){
  br->sysPerfEventReadIP = (Address)sysPerfEventRead;
  br->sysPerfEventDisableIP = (Address)sysPerfEventDisable;
  br->sysPerfEventEnableIP = (Address)sysPerfEventEnable;
  br->sysPerfEventCreateIP = (Address)sysPerfEventCreate;
  br->sysPerfEventInitIP = (Address)sysPerfEventInit;
  br->sysReportAlignmentCheckingIP = (Address)sysReportAlignmentChecking;
  br->sysDisableAlignmentCheckingIP = (Address)sysDisableAlignmentChecking;
  br->sysEnableAlignmentCheckingIP = (Address)sysEnableAlignmentChecking;
  br->sysVMMathLog1pIP = (Address)sysVMMathLog1p;
  br->sysVMMathLog10IP = (Address)sysVMMathLog10;
  br->sysVMMathHypotIP = (Address)sysVMMathHypot;
  br->sysVMMathExpm1IP = (Address)sysVMMathExpm1;
  br->sysVMMathCbrtIP = (Address)sysVMMathCbrt;
  br->sysVMMathRintIP = (Address)sysVMMathRint;
  br->sysVMMathFloorIP = (Address)sysVMMathFloor;
  br->sysVMMathCeilIP = (Address)sysVMMathCeil;
  br->sysVMMathIEEEremainderIP = (Address)sysVMMathIEEEremainder;
  br->sysVMMathPowIP = (Address)sysVMMathPow;
  br->sysVMMathSqrtIP = (Address)sysVMMathSqrt;
  br->sysVMMathLogIP = (Address)sysVMMathLog;
  br->sysVMMathExpIP = (Address)sysVMMathExp;
  br->sysVMMathTanhIP = (Address)sysVMMathTanh;
  br->sysVMMathSinhIP = (Address)sysVMMathSinh;
  br->sysVMMathCoshIP = (Address)sysVMMathCosh;
  br->sysVMMathAtan2IP = (Address)sysVMMathAtan2;
  br->sysVMMathAtanIP = (Address)sysVMMathAtan;
  br->sysVMMathAcosIP = (Address)sysVMMathAcos;
  br->sysVMMathAsinIP = (Address)sysVMMathAsin;
  br->sysVMMathTanIP = (Address)sysVMMathTan;
  br->sysVMMathCosIP = (Address)sysVMMathCos;
  br->sysVMMathSinIP = (Address)sysVMMathSin;
  br->sysVaArgJobjectIP = (Address)sysVaArgJobject;
  br->sysVaArgJdoubleIP = (Address)sysVaArgJdouble;
  br->sysVaArgJfloatIP = (Address)sysVaArgJfloat;
  br->sysVaArgJlongIP = (Address)sysVaArgJlong;
  br->sysVaArgJintIP = (Address)sysVaArgJint;
  br->sysVaArgJshortIP = (Address)sysVaArgJshort;
  br->sysVaArgJcharIP = (Address)sysVaArgJchar;
  br->sysVaArgJbyteIP = (Address)sysVaArgJbyte;
  br->sysVaArgJbooleanIP = (Address)sysVaArgJboolean;
  br->sysVaEndIP = (Address)sysVaEnd;
  br->sysVaCopyIP = (Address)sysVaCopy;
  br->sysDlsymIP = (Address)sysDlsym;
  br->sysDlopenIP = (Address)sysDlopen;
  br->sysNanoSleepIP = (Address)sysNanoSleep;
  br->sysNanoTimeIP = (Address)sysNanoTime;
  br->sysCurrentTimeMillisIP = (Address)sysCurrentTimeMillis;
  br->sysParseMemorySizeIP = (Address)sysParseMemorySize;
  br->sysPrimitiveParseIntIP = (Address)sysPrimitiveParseInt;
  br->sysPrimitiveParseFloatIP = (Address)sysPrimitiveParseFloat;
  br->sysDoubleRemainderIP = (Address)sysDoubleRemainder;
  br->sysDoubleToLongIP = (Address)sysDoubleToLong;
  br->sysFloatToLongIP = (Address)sysFloatToLong;
  br->sysDoubleToIntIP = (Address)sysDoubleToInt;
  br->sysFloatToIntIP = (Address)sysFloatToInt;
  br->sysLongToDoubleIP = (Address)sysLongToDouble;
  br->sysLongToFloatIP = (Address)sysLongToFloat;
  br->sysLongRemainderIP = (Address)sysLongRemainder;
  br->sysLongDivideIP = (Address)sysLongDivide;
  br->sysMonitorBroadcastIP = (Address)sysMonitorBroadcast;
  br->sysMonitorWaitIP = (Address)sysMonitorWait;
  br->sysMonitorTimedWaitAbsoluteIP = (Address)sysMonitorTimedWaitAbsolute;
  br->sysMonitorExitIP = (Address)sysMonitorExit;
  br->sysMonitorEnterIP = (Address)sysMonitorEnter;
  br->sysMonitorDestroyIP = (Address)sysMonitorDestroy;
  br->sysMonitorCreateIP = (Address)sysMonitorCreate;
  br->sysSetThreadPriorityIP = (Address)sysSetThreadPriority;
  br->sysGetThreadPriorityIP = (Address)sysGetThreadPriority;
  br->sysGetThreadPriorityHandleIP = (Address)sysGetThreadPriorityHandle;
  br->sysThreadTerminateIP = (Address)sysThreadTerminate;
  br->sysStashVMThreadIP = (Address)sysStashVMThread;
  br->sysGetThreadIdIP = (Address)sysGetThreadId;
  br->sysThreadYieldIP = (Address)sysThreadYield;
  br->sysThreadCreateIP = (Address)sysThreadCreate;
  br->sysThreadBindIP = (Address)sysThreadBind;
  br->sysThreadBindSupportedIP = (Address)sysThreadBindSupported;
  br->sysNumProcessorsIP = (Address)sysNumProcessors;
  br->sysMProtectIP = (Address)sysMProtect;
  br->sysMMapErrnoIP = (Address)sysMMapErrno;
  br->sysMMapIP = (Address)sysMMap;
  br->sysWriteBytesIP = (Address)sysWriteBytes;
  br->sysReadBytesIP = (Address)sysReadBytes;
  br->sysWriteByteIP = (Address)sysWriteByte;
  br->sysReadByteIP = (Address)sysReadByte;
  br->sysSyncCacheIP = (Address)sysSyncCache;
  br->sysZeroPagesIP = (Address)sysZeroPages;
  br->sysZeroIP = (Address)sysZero;
  br->sysZeroNTIP = (Address)sysZeroNT;
  br->sysFreeIP = (Address)sysFree;
  br->sysCallocIP = (Address)sysCalloc;
  br->sysMallocIP = (Address)sysMalloc;
  br->sysMemmoveIP = (Address)sysMemmove;
  br->sysCopyIP = (Address)sysCopy;
  br->sysGetenvIP = (Address)sysGetenv;
  br->sysArgIP = (Address)sysArg;
  br->sysExitIP = (Address)sysExit;
  br->sysConsoleWriteDoubleIP = (Address)sysConsoleWriteDouble;
  br->sysConsoleWriteLongIP = (Address)sysConsoleWriteLong;
  br->sysConsoleWriteIntegerIP = (Address)sysConsoleWriteInteger;
  br->sysConsoleWriteCharIP = (Address)sysConsoleWriteChar;
  br->sysJavaVM = (Address)&sysJavaVM;
}
#endif /* NEED_BOOT_RECORD_INITIALIZATION */

#ifdef NEED_VIRTUAL_MACHINE_DECLARATIONS
#define bootImageDataAddress ((Address)0x60000000)
#define bootImageCodeAddress ((Address)0x64000000)
#define bootImageRMapAddress ((Address)0x67000000)
#define Constants_STACK_SIZE_GUARD 0x10000
#define Constants_INVISIBLE_METHOD_ID 0xffffffff
#define Constants_STACKFRAME_HEADER_SIZE 0xc
#define Constants_STACKFRAME_METHOD_ID_OFFSET ((Offset)0xfffffffc)
#define Constants_STACKFRAME_FRAME_POINTER_OFFSET ((Offset)0x00000000)
#define Constants_STACKFRAME_SENTINEL_FP ((Address)0xfffffffe)
#define ThinLockConstants_TL_THREAD_ID_SHIFT 0xa
#define Runtime_TRAP_UNKNOWN 0xffffffff
#define Runtime_TRAP_NULL_POINTER 0x0
#define Runtime_TRAP_ARRAY_BOUNDS 0x1
#define Runtime_TRAP_DIVIDE_BY_ZERO 0x2
#define Runtime_TRAP_STACK_OVERFLOW 0x3
#define Runtime_TRAP_CHECKCAST 0x4
#define Runtime_TRAP_REGENERATE 0x5
#define Runtime_TRAP_JNI_STACK 0x6
#define Runtime_TRAP_MUST_IMPLEMENT 0x7
#define Runtime_TRAP_STORE_CHECK 0x8
#define Runtime_TRAP_UNREACHABLE_BYTECODE 0xa

#define RVMThread_stack_offset ((Offset)0x00000054)
#define RVMThread_stackLimit_offset ((Offset)0x000000ec)
#define RVMThread_exceptionRegisters_offset ((Offset)0x00000068)
#define RVMThread_jniEnv_offset ((Offset)0x00000080)
#define RVMThread_execStatus_offset ((Offset)0x000000c8)
#define RVMThread_TERMINATED 0x7
#define Registers_gprs_offset ((Offset)0xfffffffc)
#define Registers_fprs_offset ((Offset)0x00000004)
#define Registers_ip_offset ((Offset)0x0000000c)
#define Registers_inuse_offset ((Offset)0x00000010)
#define JNIEnvironment_JNIExternalFunctions_offset ((Offset)0x0000000c)
#define Registers_fp_offset ((Offset)0x00000014)
#define Constants_EAX 0x0
#define Constants_ECX 0x1
#define Constants_EDX 0x2
#define Constants_EBX 0x3
#define Constants_ESP 0x4
#define Constants_EBP 0x5
#define Constants_ESI 0x6
#define Constants_EDI 0x7
#define Constants_STACKFRAME_BODY_OFFSET ((Offset)0xfffffff8)
#define Constants_STACKFRAME_RETURN_ADDRESS_OFFSET ((Offset)0x00000004)
#define Constants_RVM_TRAP_BASE 0x40
#define Thread_framePointer_offset ((Offset)0x000000f0)
#define Thread_arrayIndexTrapParam_offset ((Offset)0x000000f8)
#define ArchConstants_SSE2 0x1
#endif /* NEED_VIRTUAL_MACHINE_DECLARATIONS */

#ifdef NEED_EXIT_STATUS_CODES
/* Automatically generated from the exitStatus declarations in ExitStatus.java */
#define EXIT_STATUS_EXECUTABLE_NOT_FOUND 0x7f
#define EXIT_STATUS_COULD_NOT_EXECUTE 0x7e
#define EXIT_STATUS_MISC_TROUBLE 0x7a
#define EXIT_STATUS_IMPOSSIBLE_LIBRARY_FUNCTION_ERROR 0x7d
#define EXIT_STATUS_SYSCALL_TROUBLE 0x79
#define EXIT_STATUS_TIMER_TROUBLE 0x79
#define EXIT_STATUS_UNSUPPORTED_INTERNAL_OP 0x78
#define EXIT_STATUS_UNEXPECTED_CALL_TO_SYS 0x78
#define EXIT_STATUS_DYING_WITH_UNCAUGHT_EXCEPTION 0x71
#define EXIT_STATUS_BOGUS_COMMAND_LINE_ARG 0x64
#define EXIT_STATUS_JNI_TROUBLE 0x62
#define EXIT_STATUS_BAD_WORKING_DIR 0x62
#endif /* NEED_EXIT_STATUS_CODES */

#ifdef NEED_ASSEMBLER_DECLARATIONS
#define TR %ESI
#endif /* NEED_ASSEMBLER_DECLARATIONS */
#ifdef NEED_MEMORY_MANAGER_DECLARATIONS
#define MAXHEAPS 20
#endif /* NEED_MEMORY_MANAGER_DECLARATIONS */

